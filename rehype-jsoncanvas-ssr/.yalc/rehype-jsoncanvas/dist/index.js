import e from"fs";import{loadImage as n,createCanvas as t}from"canvas";import o from"remark-parse";import l from"remark-rehype";import r from"rehype-stringify";import i from"html2canvas";function a(){return a=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)({}).hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},a.apply(null,arguments)}class s{constructor(e,n,t){this.property=e,this.normal=n,t&&(this.space=t)}}function u(e,n){const t={},o={};let l=-1;for(;++l<e.length;)Object.assign(t,e[l].property),Object.assign(o,e[l].normal);return new s(t,o,n)}function c(e){return e.toLowerCase()}s.prototype.property={},s.prototype.normal={},s.prototype.space=null;class h{constructor(e,n){this.property=e,this.attribute=n}}h.prototype.space=null,h.prototype.boolean=!1,h.prototype.booleanish=!1,h.prototype.overloadedBoolean=!1,h.prototype.number=!1,h.prototype.commaSeparated=!1,h.prototype.spaceSeparated=!1,h.prototype.commaOrSpaceSeparated=!1,h.prototype.mustUseProperty=!1,h.prototype.defined=!1;let p=0;const d=b(),f=b(),g=b(),m=b(),y=b(),v=b(),w=b();function b(){return 2**++p}var x={__proto__:null,boolean:d,booleanish:f,overloadedBoolean:g,number:m,spaceSeparated:y,commaSeparated:v,commaOrSpaceSeparated:w};const S=Object.keys(x);class k extends h{constructor(e,n,t,o){let l=-1;if(super(e,n),P(this,"space",o),"number"==typeof t)for(;++l<S.length;){const e=S[l];P(this,S[l],(t&x[e])===x[e])}}}function P(e,n,t){t&&(e[n]=t)}k.prototype.defined=!0;const C={}.hasOwnProperty;function M(e){const n={},t={};let o;for(o in e.properties)if(C.call(e.properties,o)){const l=e.properties[o],r=new k(o,e.transform(e.attributes||{},o),l,e.space);e.mustUseProperty&&e.mustUseProperty.includes(o)&&(r.mustUseProperty=!0),n[o]=r,t[c(o)]=o,t[c(r.attribute)]=o}return new s(n,t,e.space)}const E=M({space:"xlink",transform:(e,n)=>"xlink:"+n.slice(5).toLowerCase(),properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}}),A=M({space:"xml",transform:(e,n)=>"xml:"+n.slice(3).toLowerCase(),properties:{xmlLang:null,xmlBase:null,xmlSpace:null}});function O(e,n){return n in e?e[n]:n}function L(e,n){return O(e,n.toLowerCase())}const T=M({space:"xmlns",attributes:{xmlnsxlink:"xmlns:xlink"},transform:L,properties:{xmlns:null,xmlnsXLink:null}}),D=M({transform:(e,n)=>"role"===n?n:"aria-"+n.slice(4).toLowerCase(),properties:{ariaActiveDescendant:null,ariaAtomic:f,ariaAutoComplete:null,ariaBusy:f,ariaChecked:f,ariaColCount:m,ariaColIndex:m,ariaColSpan:m,ariaControls:y,ariaCurrent:null,ariaDescribedBy:y,ariaDetails:null,ariaDisabled:f,ariaDropEffect:y,ariaErrorMessage:null,ariaExpanded:f,ariaFlowTo:y,ariaGrabbed:f,ariaHasPopup:null,ariaHidden:f,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:y,ariaLevel:m,ariaLive:null,ariaModal:f,ariaMultiLine:f,ariaMultiSelectable:f,ariaOrientation:null,ariaOwns:y,ariaPlaceholder:null,ariaPosInSet:m,ariaPressed:f,ariaReadOnly:f,ariaRelevant:null,ariaRequired:f,ariaRoleDescription:y,ariaRowCount:m,ariaRowIndex:m,ariaRowSpan:m,ariaSelected:f,ariaSetSize:m,ariaSort:null,ariaValueMax:m,ariaValueMin:m,ariaValueNow:m,ariaValueText:null,role:null}}),R=M({space:"html",attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},transform:L,mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:v,acceptCharset:y,accessKey:y,action:null,allow:null,allowFullScreen:d,allowPaymentRequest:d,allowUserMedia:d,alt:null,as:null,async:d,autoCapitalize:null,autoComplete:y,autoFocus:d,autoPlay:d,blocking:y,capture:null,charSet:null,checked:d,cite:null,className:y,cols:m,colSpan:null,content:null,contentEditable:f,controls:d,controlsList:y,coords:m|v,crossOrigin:null,data:null,dateTime:null,decoding:null,default:d,defer:d,dir:null,dirName:null,disabled:d,download:g,draggable:f,encType:null,enterKeyHint:null,fetchPriority:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:d,formTarget:null,headers:y,height:m,hidden:d,high:m,href:null,hrefLang:null,htmlFor:y,httpEquiv:y,id:null,imageSizes:null,imageSrcSet:null,inert:d,inputMode:null,integrity:null,is:null,isMap:d,itemId:null,itemProp:y,itemRef:y,itemScope:d,itemType:y,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:d,low:m,manifest:null,max:null,maxLength:m,media:null,method:null,min:null,minLength:m,multiple:d,muted:d,name:null,nonce:null,noModule:d,noValidate:d,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeToggle:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:d,optimum:m,pattern:null,ping:y,placeholder:null,playsInline:d,popover:null,popoverTarget:null,popoverTargetAction:null,poster:null,preload:null,readOnly:d,referrerPolicy:null,rel:y,required:d,reversed:d,rows:m,rowSpan:m,sandbox:y,scope:null,scoped:d,seamless:d,selected:d,shadowRootClonable:d,shadowRootDelegatesFocus:d,shadowRootMode:null,shape:null,size:m,sizes:null,slot:null,span:m,spellCheck:f,src:null,srcDoc:null,srcLang:null,srcSet:null,start:m,step:null,style:null,tabIndex:m,target:null,title:null,translate:null,type:null,typeMustMatch:d,useMap:null,value:f,width:m,wrap:null,writingSuggestions:null,align:null,aLink:null,archive:y,axis:null,background:null,bgColor:null,border:m,borderColor:null,bottomMargin:m,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:d,declare:d,event:null,face:null,frame:null,frameBorder:null,hSpace:m,leftMargin:m,link:null,longDesc:null,lowSrc:null,marginHeight:m,marginWidth:m,noResize:d,noHref:d,noShade:d,noWrap:d,object:null,profile:null,prompt:null,rev:null,rightMargin:m,rules:null,scheme:null,scrolling:f,standby:null,summary:null,text:null,topMargin:m,valueType:null,version:null,vAlign:null,vLink:null,vSpace:m,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:d,disableRemotePlayback:d,prefix:null,property:null,results:m,security:null,unselectable:null}}),I=M({space:"svg",attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",transformOrigin:"transform-origin",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},transform:O,properties:{about:w,accentHeight:m,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:m,amplitude:m,arabicForm:null,ascent:m,attributeName:null,attributeType:null,azimuth:m,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:m,by:null,calcMode:null,capHeight:m,className:y,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:m,diffuseConstant:m,direction:null,display:null,dur:null,divisor:m,dominantBaseline:null,download:d,dx:null,dy:null,edgeMode:null,editable:null,elevation:m,enableBackground:null,end:null,event:null,exponent:m,externalResourcesRequired:null,fill:null,fillOpacity:m,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:v,g2:v,glyphName:v,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:m,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:m,horizOriginX:m,horizOriginY:m,id:null,ideographic:m,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:m,k:m,k1:m,k2:m,k3:m,k4:m,kernelMatrix:w,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:m,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:m,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:m,overlineThickness:m,paintOrder:null,panose1:null,path:null,pathLength:m,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:y,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:m,pointsAtY:m,pointsAtZ:m,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:w,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:w,rev:w,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:w,requiredFeatures:w,requiredFonts:w,requiredFormats:w,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:m,specularExponent:m,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:m,strikethroughThickness:m,string:null,stroke:null,strokeDashArray:w,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:m,strokeOpacity:m,strokeWidth:null,style:null,surfaceScale:m,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:w,tabIndex:m,tableValues:null,target:null,targetX:m,targetY:m,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:w,to:null,transform:null,transformOrigin:null,u1:null,u2:null,underlinePosition:m,underlineThickness:m,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:m,values:null,vAlphabetic:m,vMathematical:m,vectorEffect:null,vHanging:m,vIdeographic:m,version:null,vertAdvY:m,vertOriginX:m,vertOriginY:m,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:m,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null}}),N=/^data[-\w.:]+$/i,U=/-[a-z]/g,z=/[A-Z]/g;function j(e){return"-"+e.toLowerCase()}function B(e){return e.charAt(1).toUpperCase()}const F=u([A,E,T,D,R],"html"),H=u([A,E,T,D,I],"svg");function V(e){const n=[],t=String(e||"");let o=t.indexOf(","),l=0,r=!1;for(;!r;){-1===o&&(o=t.length,r=!0);const e=t.slice(l,o).trim();!e&&r||n.push(e),l=o+1,o=t.indexOf(",",l)}return n}const _=/[#.]/g;function W(e){const n=String(e||"").trim();return n?n.split(/[ \t\n\r\f]+/g):[]}const q=new Set(["button","menu","reset","submit"]),X={}.hasOwnProperty;function Y(e,n,t){const o=t&&function(e){const n={};let t=-1;for(;++t<e.length;)n[e[t].toLowerCase()]=e[t];return n}(t);return function(t,l,...r){let i,a=-1;if(null==t)i={type:"root",children:[]},r.unshift(l);else if(i=function(e,n){const t=e||"",o={};let l,r,i=0;for(;i<t.length;){_.lastIndex=i;const e=_.exec(t),n=t.slice(i,e?e.index:t.length);n&&(l?"#"===l?o.id=n:Array.isArray(o.className)?o.className.push(n):o.className=[n]:r=n,i+=n.length),e&&(l=e[0],i++)}return{type:"element",tagName:r||n||"div",properties:o,children:[]}}(t,n),i.tagName=i.tagName.toLowerCase(),o&&X.call(o,i.tagName)&&(i.tagName=o[i.tagName]),u=i.tagName,null==(s=l)||"object"!=typeof s||Array.isArray(s)||"input"!==u&&s.type&&"string"==typeof s.type&&("children"in s&&Array.isArray(s.children)||("button"===u?!q.has(s.type.toLowerCase()):"value"in s)))r.unshift(l);else{let n;for(n in l)X.call(l,n)&&K(e,i.properties,n,l[n])}for(var s,u;++a<r.length;)G(i.children,r[a]);return"element"===i.type&&"template"===i.tagName&&(i.content={type:"root",children:i.children},i.children=[]),i}}function K(e,n,t,o){const l=function(e,n){const t=c(n);let o=n,l=h;if(t in e.normal)return e.property[e.normal[t]];if(t.length>4&&"data"===t.slice(0,4)&&N.test(n)){if("-"===n.charAt(4)){const e=n.slice(5).replace(U,B);o="data"+e.charAt(0).toUpperCase()+e.slice(1)}else{const e=n.slice(4);if(!U.test(e)){let t=e.replace(z,j);"-"!==t.charAt(0)&&(t="-"+t),n="data"+t}}l=k}return new l(o,n)}(e,t);let r,i=-1;if(null!=o){if("number"==typeof o){if(Number.isNaN(o))return;r=o}else r="boolean"==typeof o?o:"string"==typeof o?l.spaceSeparated?W(o):l.commaSeparated?V(o):l.commaOrSpaceSeparated?W(V(o).join(" ")):$(l,l.property,o):Array.isArray(o)?o.concat():"style"===l.property?function(e){const n=[];let t;for(t in e)X.call(e,t)&&n.push([t,e[t]].join(": "));return n.join("; ")}(o):String(o);if(Array.isArray(r)){const e=[];for(;++i<r.length;){const n=$(l,l.property,r[i]);e[i]=n}r=e}"className"===l.property&&Array.isArray(n.className)&&(r=n.className.concat(r)),n[l.property]=r}}function G(e,n){let t=-1;if(null==n);else if("string"==typeof n||"number"==typeof n)e.push({type:"text",value:String(n)});else if(Array.isArray(n))for(;++t<n.length;)G(e,n[t]);else{if("object"!=typeof n||!("type"in n))throw new Error("Expected node, nodes, or string, got `"+n+"`");"root"===n.type?G(e,n.children):e.push(n)}}function $(e,n,t){if("string"==typeof t){if(e.number&&t&&!Number.isNaN(Number(t)))return Number(t);if((e.boolean||e.overloadedBoolean)&&(""===t||c(t)===c(n)))return!0}return t}const J=Y(F,"div"),Z=Y(H,"g",["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","solidColor","textArea","textPath"]),Q={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function ee(e,n){const t=function(e,n){switch(e.nodeType){case 1:return function(e,n){const t=e.namespaceURI,o=t===Q.svg?Z:J,l=t===Q.html?e.tagName.toLowerCase():e.tagName,r=t===Q.html&&"template"===l?e.content:e,i=e.getAttributeNames(),a={};let s=-1;for(;++s<i.length;)a[i[s]]=e.getAttribute(i[s])||"";return o(l,a,ne(r,n))}(e,n);case 3:return function(e){return{type:"text",value:e.nodeValue||""}}(e);case 8:return function(e){return{type:"comment",value:e.nodeValue||""}}(e);case 9:case 11:return function(e,n){return{type:"root",children:ne(e,n)}}(e,n);case 10:return{type:"doctype"};default:return}}(e,n);return t&&n.afterTransform&&n.afterTransform(e,t),t}function ne(e,n){const t=e.childNodes,o=[];let l=-1;for(;++l<t.length;){const e=ee(t[l],n);void 0!==e&&o.push(e)}return o}const te=new DOMParser,oe=function(e){if(null==e)return re;if("function"==typeof e)return le(e);if("object"==typeof e)return Array.isArray(e)?function(e){const n=[];let t=-1;for(;++t<e.length;)n[t]=oe(e[t]);return le(function(...e){let t=-1;for(;++t<n.length;)if(n[t].apply(this,e))return!0;return!1})}(e):function(e){const n=e;return le(function(t){const o=t;let l;for(l in e)if(o[l]!==n[l])return!1;return!0})}(e);if("string"==typeof e)return n=e,le(function(e){return e&&e.type===n});var n;throw new Error("Expected function, string, or object as test")};function le(e){return function(n,t,o){return Boolean(function(e){return null!==e&&"object"==typeof e&&"type"in e}(n)&&e.call(this,n,"number"==typeof t?t:void 0,o||void 0))}}function re(){return!0}const ie=[],ae=!1;function se(e={}){return{openEmbededInNewTab:void 0===e.openEmbededInNewTab||e.openEmbededInNewTab,renderMode:void 0===e.renderMode?"canvas":e.renderMode,canvasBuffer:void 0===e.canvasBuffer?30:e.canvasBuffer,nodeStrokeWidth:void 0===e.nodeStrokeWidth?3:e.nodeStrokeWidth,lineStrokeWidth:void 0===e.lineStrokeWidth?5:e.lineStrokeWidth}}function ue(e){if(e)throw e}var ce=Object.prototype.hasOwnProperty,he=Object.prototype.toString,pe=Object.defineProperty,de=Object.getOwnPropertyDescriptor,fe=function(e){return"function"==typeof Array.isArray?Array.isArray(e):"[object Array]"===he.call(e)},ge=function(e){if(!e||"[object Object]"!==he.call(e))return!1;var n,t=ce.call(e,"constructor"),o=e.constructor&&e.constructor.prototype&&ce.call(e.constructor.prototype,"isPrototypeOf");if(e.constructor&&!t&&!o)return!1;for(n in e);return void 0===n||ce.call(e,n)},me=function(e,n){pe&&"__proto__"===n.name?pe(e,n.name,{enumerable:!0,configurable:!0,value:n.newValue,writable:!0}):e[n.name]=n.newValue},ye=function(e,n){if("__proto__"===n){if(!ce.call(e,n))return;if(de)return de(e,n).value}return e[n]},ve=function e(){var n,t,o,l,r,i,a=arguments[0],s=1,u=arguments.length,c=!1;for("boolean"==typeof a&&(c=a,a=arguments[1]||{},s=2),(null==a||"object"!=typeof a&&"function"!=typeof a)&&(a={});s<u;++s)if(null!=(n=arguments[s]))for(t in n)o=ye(a,t),a!==(l=ye(n,t))&&(c&&l&&(ge(l)||(r=fe(l)))?(r?(r=!1,i=o&&fe(o)?o:[]):i=o&&ge(o)?o:{},me(a,{name:t,newValue:e(c,i,l)})):void 0!==l&&me(a,{name:t,newValue:l}));return a};function we(e){if("object"!=typeof e||null===e)return!1;const n=Object.getPrototypeOf(e);return!(null!==n&&n!==Object.prototype&&null!==Object.getPrototypeOf(n)||Symbol.toStringTag in e||Symbol.iterator in e)}function be(e){return Se(e&&e.line)+":"+Se(e&&e.column)}function xe(e){return be(e&&e.start)+"-"+be(e&&e.end)}function Se(e){return e&&"number"==typeof e?e:1}class ke extends Error{constructor(e,n,t){super(),"string"==typeof n&&(t=n,n=void 0);let o="",l={},r=!1;if(n&&(l="line"in n&&"column"in n||"start"in n&&"end"in n?{place:n}:"type"in n?{ancestors:[n],place:n.position}:{...n}),"string"==typeof e?o=e:!l.cause&&e&&(r=!0,o=e.message,l.cause=e),!l.ruleId&&!l.source&&"string"==typeof t){const e=t.indexOf(":");-1===e?l.ruleId=t:(l.source=t.slice(0,e),l.ruleId=t.slice(e+1))}if(!l.place&&l.ancestors&&l.ancestors){const e=l.ancestors[l.ancestors.length-1];e&&(l.place=e.position)}const i=l.place&&"start"in l.place?l.place.start:l.place;var a;this.ancestors=l.ancestors||void 0,this.cause=l.cause||void 0,this.column=i?i.column:void 0,this.fatal=void 0,this.message=o,this.line=i?i.line:void 0,this.name=((a=l.place)&&"object"==typeof a?"position"in a||"type"in a?xe(a.position):"start"in a||"end"in a?xe(a):"line"in a||"column"in a?be(a):"":"")||"1:1",this.place=l.place||void 0,this.reason=this.message,this.ruleId=l.ruleId||void 0,this.source=l.source||void 0,this.stack=r&&l.cause&&"string"==typeof l.cause.stack?l.cause.stack:""}}ke.prototype.file="",ke.prototype.name="",ke.prototype.reason="",ke.prototype.message="",ke.prototype.stack="",ke.prototype.column=void 0,ke.prototype.line=void 0,ke.prototype.ancestors=void 0,ke.prototype.cause=void 0,ke.prototype.fatal=void 0,ke.prototype.place=void 0,ke.prototype.ruleId=void 0,ke.prototype.source=void 0;const Pe=function(e,n){if(void 0!==n&&"string"!=typeof n)throw new TypeError('"ext" argument must be a string');Me(e);let t,o=0,l=-1,r=e.length;if(void 0===n||0===n.length||n.length>e.length){for(;r--;)if(47===e.codePointAt(r)){if(t){o=r+1;break}}else l<0&&(t=!0,l=r+1);return l<0?"":e.slice(o,l)}if(n===e)return"";let i=-1,a=n.length-1;for(;r--;)if(47===e.codePointAt(r)){if(t){o=r+1;break}}else i<0&&(t=!0,i=r+1),a>-1&&(e.codePointAt(r)===n.codePointAt(a--)?a<0&&(l=r):(a=-1,l=i));return o===l?l=i:l<0&&(l=e.length),e.slice(o,l)},Ce=function(...e){let n,t=-1;for(;++t<e.length;)Me(e[t]),e[t]&&(n=void 0===n?e[t]:n+"/"+e[t]);return void 0===n?".":function(e){Me(e);const n=47===e.codePointAt(0);let t=function(e,n){let t,o,l="",r=0,i=-1,a=0,s=-1;for(;++s<=e.length;){if(s<e.length)t=e.codePointAt(s);else{if(47===t)break;t=47}if(47===t){if(i===s-1||1===a);else if(i!==s-1&&2===a){if(l.length<2||2!==r||46!==l.codePointAt(l.length-1)||46!==l.codePointAt(l.length-2))if(l.length>2){if(o=l.lastIndexOf("/"),o!==l.length-1){o<0?(l="",r=0):(l=l.slice(0,o),r=l.length-1-l.lastIndexOf("/")),i=s,a=0;continue}}else if(l.length>0){l="",r=0,i=s,a=0;continue}n&&(l=l.length>0?l+"/..":"..",r=2)}else l.length>0?l+="/"+e.slice(i+1,s):l=e.slice(i+1,s),r=s-i-1;i=s,a=0}else 46===t&&a>-1?a++:a=-1}return l}(e,!n);return 0!==t.length||n||(t="."),t.length>0&&47===e.codePointAt(e.length-1)&&(t+="/"),n?"/"+t:t}(n)};function Me(e){if("string"!=typeof e)throw new TypeError("Path must be a string. Received "+JSON.stringify(e))}function Ee(e){return Boolean(null!==e&&"object"==typeof e&&"href"in e&&e.href&&"protocol"in e&&e.protocol&&void 0===e.auth)}const Ae=["history","path","basename","stem","extname","dirname"];class Oe{constructor(e){let n;n=e?Ee(e)?{path:e}:"string"==typeof e||function(e){return Boolean(e&&"object"==typeof e&&"byteLength"in e&&"byteOffset"in e)}(e)?{value:e}:e:{},this.cwd="/",this.data={},this.history=[],this.messages=[];let t,o=-1;for(;++o<Ae.length;){const e=Ae[o];e in n&&null!=n[e]&&(this[e]="history"===e?[...n[e]]:n[e])}for(t in n)Ae.includes(t)||(this[t]=n[t])}get basename(){return"string"==typeof this.path?Pe(this.path):void 0}set basename(e){Te(e,"basename"),Le(e,"basename"),this.path=Ce(this.dirname||"",e)}get dirname(){return"string"==typeof this.path?function(e){if(Me(e),0===e.length)return".";let n,t=-1,o=e.length;for(;--o;)if(47===e.codePointAt(o)){if(n){t=o;break}}else n||(n=!0);return t<0?47===e.codePointAt(0)?"/":".":1===t&&47===e.codePointAt(0)?"//":e.slice(0,t)}(this.path):void 0}set dirname(e){De(this.basename,"dirname"),this.path=Ce(e||"",this.basename)}get extname(){return"string"==typeof this.path?function(e){Me(e);let n,t=e.length,o=-1,l=0,r=-1,i=0;for(;t--;){const a=e.codePointAt(t);if(47!==a)o<0&&(n=!0,o=t+1),46===a?r<0?r=t:1!==i&&(i=1):r>-1&&(i=-1);else if(n){l=t+1;break}}return r<0||o<0||0===i||1===i&&r===o-1&&r===l+1?"":e.slice(r,o)}(this.path):void 0}set extname(e){if(Le(e,"extname"),De(this.dirname,"extname"),e){if(46!==e.codePointAt(0))throw new Error("`extname` must start with `.`");if(e.includes(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=Ce(this.dirname,this.stem+(e||""))}get path(){return this.history[this.history.length-1]}set path(e){Ee(e)&&(e=function(e){if("string"==typeof e)e=new URL(e);else if(!Ee(e)){const n=new TypeError('The "path" argument must be of type string or an instance of URL. Received `'+e+"`");throw n.code="ERR_INVALID_ARG_TYPE",n}if("file:"!==e.protocol){const e=new TypeError("The URL must be of scheme file");throw e.code="ERR_INVALID_URL_SCHEME",e}return function(e){if(""!==e.hostname){const e=new TypeError('File URL host must be "localhost" or empty on darwin');throw e.code="ERR_INVALID_FILE_URL_HOST",e}const n=e.pathname;let t=-1;for(;++t<n.length;)if(37===n.codePointAt(t)&&50===n.codePointAt(t+1)){const e=n.codePointAt(t+2);if(70===e||102===e){const e=new TypeError("File URL path must not include encoded / characters");throw e.code="ERR_INVALID_FILE_URL_PATH",e}}return decodeURIComponent(n)}(e)}(e)),Te(e,"path"),this.path!==e&&this.history.push(e)}get stem(){return"string"==typeof this.path?Pe(this.path,this.extname):void 0}set stem(e){Te(e,"stem"),Le(e,"stem"),this.path=Ce(this.dirname||"",e+(this.extname||""))}fail(e,n,t){const o=this.message(e,n,t);throw o.fatal=!0,o}info(e,n,t){const o=this.message(e,n,t);return o.fatal=void 0,o}message(e,n,t){const o=new ke(e,n,t);return this.path&&(o.name=this.path+":"+o.name,o.file=this.path),o.fatal=!1,this.messages.push(o),o}toString(e){return void 0===this.value?"":"string"==typeof this.value?this.value:new TextDecoder(e||void 0).decode(this.value)}}function Le(e,n){if(e&&e.includes("/"))throw new Error("`"+n+"` cannot be a path: did not expect `/`")}function Te(e,n){if(!e)throw new Error("`"+n+"` cannot be empty")}function De(e,n){if(!e)throw new Error("Setting `"+n+"` requires `path` to be set too")}const Re=function(e){const n=this.constructor.prototype,t=n[e],o=function(){return t.apply(o,arguments)};return Object.setPrototypeOf(o,n),o},Ie={}.hasOwnProperty;class Ne extends Re{constructor(){super("copy"),this.Compiler=void 0,this.Parser=void 0,this.attachers=[],this.compiler=void 0,this.freezeIndex=-1,this.frozen=void 0,this.namespace={},this.parser=void 0,this.transformers=function(){const e=[],n={run:function(...n){let t=-1;const o=n.pop();if("function"!=typeof o)throw new TypeError("Expected function as last argument, not "+o);!function l(r,...i){const a=e[++t];let s=-1;if(r)o(r);else{for(;++s<n.length;)null==i[s]&&(i[s]=n[s]);n=i,a?function(e,n){let t;return function(...n){const r=e.length>n.length;let i;r&&n.push(o);try{i=e.apply(this,n)}catch(e){if(r&&t)throw e;return o(e)}r||(i&&i.then&&"function"==typeof i.then?i.then(l,o):i instanceof Error?o(i):l(i))};function o(e,...o){t||(t=!0,n(e,...o))}function l(e){o(null,e)}}(a,l)(...i):o(null,...i)}}(null,...n)},use:function(t){if("function"!=typeof t)throw new TypeError("Expected `middelware` to be a function, not "+t);return e.push(t),n}};return n}()}copy(){const e=new Ne;let n=-1;for(;++n<this.attachers.length;)e.use(...this.attachers[n]);return e.data(ve(!0,{},this.namespace)),e}data(e,n){return"string"==typeof e?2===arguments.length?(Be("data",this.frozen),this.namespace[e]=n,this):Ie.call(this.namespace,e)&&this.namespace[e]||void 0:e?(Be("data",this.frozen),this.namespace=e,this):this.namespace}freeze(){if(this.frozen)return this;const e=this;for(;++this.freezeIndex<this.attachers.length;){const[n,...t]=this.attachers[this.freezeIndex];if(!1===t[0])continue;!0===t[0]&&(t[0]=void 0);const o=n.call(e,...t);"function"==typeof o&&this.transformers.use(o)}return this.frozen=!0,this.freezeIndex=Number.POSITIVE_INFINITY,this}parse(e){this.freeze();const n=Ve(e),t=this.parser||this.Parser;return ze("parse",t),t(String(n),n)}process(e,n){const t=this;return this.freeze(),ze("process",this.parser||this.Parser),je("process",this.compiler||this.Compiler),n?o(void 0,n):new Promise(o);function o(o,l){const r=Ve(e),i=t.parse(r);function a(e,t){e||!t?l(e):o?o(t):n(void 0,t)}t.run(i,r,function(e,n,o){if(e||!n||!o)return a(e);const l=t.stringify(n,o);var r;"string"==typeof(r=l)||function(e){return Boolean(e&&"object"==typeof e&&"byteLength"in e&&"byteOffset"in e)}(r)?o.value=l:o.result=l,a(e,o)})}}processSync(e){let n,t=!1;return this.freeze(),ze("processSync",this.parser||this.Parser),je("processSync",this.compiler||this.Compiler),this.process(e,function(e,o){t=!0,ue(e),n=o}),He("processSync","process",t),n}run(e,n,t){Fe(e),this.freeze();const o=this.transformers;return t||"function"!=typeof n||(t=n,n=void 0),t?l(void 0,t):new Promise(l);function l(l,r){const i=Ve(n);o.run(e,i,function(n,o,i){const a=o||e;n?r(n):l?l(a):t(void 0,a,i)})}}runSync(e,n){let t,o=!1;return this.run(e,n,function(e,n){ue(e),t=n,o=!0}),He("runSync","run",o),t}stringify(e,n){this.freeze();const t=Ve(n),o=this.compiler||this.Compiler;return je("stringify",o),Fe(e),o(e,t)}use(e,...n){const t=this.attachers,o=this.namespace;if(Be("use",this.frozen),null==e);else if("function"==typeof e)a(e,n);else{if("object"!=typeof e)throw new TypeError("Expected usable value, not `"+e+"`");Array.isArray(e)?i(e):r(e)}return this;function l(e){if("function"==typeof e)a(e,[]);else{if("object"!=typeof e)throw new TypeError("Expected usable value, not `"+e+"`");if(Array.isArray(e)){const[n,...t]=e;a(n,t)}else r(e)}}function r(e){if(!("plugins"in e)&&!("settings"in e))throw new Error("Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither");i(e.plugins),e.settings&&(o.settings=ve(!0,o.settings,e.settings))}function i(e){let n=-1;if(null==e);else{if(!Array.isArray(e))throw new TypeError("Expected a list of plugins, not `"+e+"`");for(;++n<e.length;)l(e[n])}}function a(e,n){let o=-1,l=-1;for(;++o<t.length;)if(t[o][0]===e){l=o;break}if(-1===l)t.push([e,...n]);else if(n.length>0){let[o,...r]=n;const i=t[l][1];we(i)&&we(o)&&(o=ve(!0,i,o)),t[l]=[e,o,...r]}}}}const Ue=(new Ne).freeze();function ze(e,n){if("function"!=typeof n)throw new TypeError("Cannot `"+e+"` without `parser`")}function je(e,n){if("function"!=typeof n)throw new TypeError("Cannot `"+e+"` without `compiler`")}function Be(e,n){if(n)throw new Error("Cannot call `"+e+"` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.")}function Fe(e){if(!we(e)||"string"!=typeof e.type)throw new TypeError("Expected node, got `"+e+"`")}function He(e,n,t){if(!t)throw new Error("`"+e+"` finished async. Use `"+n+"` instead")}function Ve(e){return function(e){return Boolean(e&&"object"==typeof e&&"message"in e&&"messages"in e)}(e)?e:new Oe(e)}const _e=[];function We(e){let n=_e.every(e=>e.complete);if(console.group("Images loading",_e,n),_e.length<1)return e();n?e():We(e)}function qe(e,a){const s=se(a);console.log("render",e);const{canvasWidth:u,canvasHeight:c,offsetX:h,offsetY:p}=function(e){let n=Infinity,t=Infinity,o=-Infinity,l=-Infinity;return e.getNodes().forEach(e=>{n=Math.min(n,e.x),t=Math.min(t,e.y),o=Math.max(o,e.x+e.width),l=Math.max(l,e.y+e.height)}),{canvasWidth:o-n,canvasHeight:l-t,offsetX:-n,offsetY:-t}}(e);console.log(u,c,h,p);const{canvas:d,ctx:f}=function(e,n,o,l){const r=se(void 0),i=t(n,o,"svg"===r.renderMode?"svg":void 0);if(!i)return console.error("Canvas element with id 'jsc' not found."),{canvas:null,ctx:null};i.width=n,i.height=o;const a=i.getContext("2d");return a?(a.clearRect(0,0,i.width,i.height),a.font="32px",{canvas:i,ctx:a}):(console.error("Unable to get canvas context."),{canvas:i,ctx:null})}(0,u+h,c+p);return null===d||null===f?null:(e.getNodes().forEach(e=>{!async function(e,t,a,s){const u=se(s);console.log("Drawing Node",a),t.fillStyle="rgba(255, 255, 255, .5)",t.strokeStyle="rgba(0,0,0,1)",t.beginPath(),"1"===a.color?(t.fillStyle="rgba(255, 0, 0, .5)",t.strokeStyle="rgba(255,0,0,1)"):"2"===a.color?(t.fillStyle="rgba(255, 100, 0, .5)",t.strokeStyle="rgba(255,100,0,1)"):"3"===a.color?(t.fillStyle="rgba(255, 255, 0, .5)",t.strokeStyle="rgba(255,255,0,1)"):"4"===a.color?(t.fillStyle="rgba(0, 255, 100, .5)",t.strokeStyle="rgba(0,100,0,1)"):"5"===a.color?(t.fillStyle="rgba(0, 255, 255, .5)",t.strokeStyle="rgba(0,255,255,1)"):"6"===a.color&&(t.fillStyle="rgba(100, 10, 100, .5)",t.strokeStyle="rgba(100,10,100,1)"),t.roundRect(a.x+e.width/2,a.y+e.height/2,a.width,a.height,[5]),async function(e,t,o){if("file"===o.type&&e&&o.file.match(/\.(jpg|jpeg|png|gif)$/i)){const l=new Image,r=await n(o.file);l.onload=()=>{t.drawImage(l,o.x+e.width/2,o.y+e.height/2,o.width,o.height)},l.src=r.src,_e.push(l)}}(e,t,a),async function(e,n,t){if("file"===t.type&&e&&t.file.match(/\.(md|mdx)$/i)){const a=await fetch(t.file),s=await a.text(),u=await Ue().use(o).use(l).use(r).process(s),c=String(u),h=document.createElement("div");h.innerHTML=c,h.style.width=`${t.width}px`,h.style.height=`${t.height}px`,h.style.color="black",h.style.backgroundColor="red",h.style.position="absolute",document.body.appendChild(h);const p=await i(h),d=new Image(t.width,t.height);d.onload=async()=>{await n.drawImage(d,t.x+e.width/2,t.y+e.height/2,t.width,t.height),console.log("Markdown",d),document.body.removeChild(h)},d.src=p.toDataURL(),_e.push(d)}}(e,t,a),t.lineWidth=u.nodeStrokeWidth,t.stroke(),t.fill(),t.closePath(),t.fillStyle="rgba(0, 0, 0, 1)",a.label&&t.fillText(a.label,a.x+5+e.width/2,a.y+20+e.height/2),"text"===a.type&&a.text&&t.fillText(a.text,a.x+5+e.width/2,a.y+40+e.height/2)}(d,f,e,s)}),e.getEdges().forEach(n=>{const t=e.getNodes().find(e=>e.id===n.fromNode),o=e.getNodes().find(e=>e.id===n.toNode);void 0!==o&&void 0!==t&&function(e,n,t,o,l,r){const i=se(r);if(n.lineWidth=i.lineStrokeWidth,n.strokeStyle="rgba(0,0,0,1)",o&&t){let r=o.x+("top"==l.fromSide||"bottom"==l.fromSide?o.width/2:o.width)+e.width/2,i=o.y+o.height/2+e.height/2,a=t.x+("top"==l.toSide||"bottom"==l.toSide?t.width/2:t.width)+e.width/2,s=t.y+t.height/2+e.height/2;"left"===l.fromSide?r=o.x+e.width/2:"top"===l.fromSide?i=o.y+e.height/2:"bottom"===l.fromSide&&(i=o.y+o.height+e.height/2),"right"===l.toSide?a=t.x+t.width+e.width/2:"top"===l.toSide?s=t.y+e.height/2:"bottom"===l.toSide?s=t.y+t.height+e.height/2:"left"===l.toSide&&(a=t.x+e.width/2),n.beginPath(),n.moveTo(r,i);const u={x:r,y:s},c={x:a,y:i};n.bezierCurveTo(u.x,u.y,c.x,c.y,a,s),n.stroke(),n.closePath();const h=1,p=Math.atan2(3*(1-h)*(1-h)*(u.y-i)+6*(1-h)*h*(c.y-u.y)+3*h*h*(s-c.y),3*(1-h)*(1-h)*(u.x-r)+6*(1-h)*h*(c.x-u.x)+3*h*h*(a-c.x)),d=20;n.beginPath(),n.moveTo(a,s),n.lineTo(a-d*Math.cos(p-Math.PI/6),s-d*Math.sin(p-Math.PI/6)),n.lineTo(a-d*Math.cos(p+Math.PI/6),s-d*Math.sin(p+Math.PI/6)),n.lineTo(a,s),n.lineTo(a-d*Math.cos(p-Math.PI/6),s-d*Math.sin(p-Math.PI/6)),n.stroke(),n.fill()}}(d,f,o,t,n,s)}),We(()=>function(e,n){const t=se(void 0);return"svg"==t.renderMode||"canvas"==t.renderMode?"undefined"!=typeof window?e.toDataURL():e&&e.toBuffer():e.toDataURL()}(d)))}var Xe=Object.defineProperty,Ye=(e,n,t)=>(((e,n,t)=>{n in e?Xe(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t})(e,"symbol"!=typeof n?n+"":n,t),t);class Ke{constructor(e,n){Ye(this,"nodes",[]),Ye(this,"edges",[]),e&&(this.nodes=e),n&&(this.edges=n)}addNode(e){if(this.nodes.find(n=>n.id===e.id))throw new Error("A node with the same ID already exists in this.nodes");this.nodes.push(e)}addEdge(e){if(this.edges.find(n=>n.id===e.id))throw new Error("An edge with the same ID already exists in this.edges");this.edges.push(e)}getNode(e){return this.nodes.find(n=>n.id===e)}getEdge(e){return this.edges.find(n=>n.id===e)}getNodes(){return this.nodes}getEdges(){return this.edges}removeNode(e){this.nodes=this.nodes.filter(n=>n.id!==e),this.edges=this.edges.filter(n=>n.fromNode!==e&&n.toNode!==e)}removeEdge(e){this.edges=this.edges.filter(n=>n.id!==e)}toString(){return JSON.stringify({nodes:this.nodes,edges:this.edges})}static fromString(e){const n=JSON.parse(e);return new Ke(n.nodes,n.edges)}}const Ge=()=>async e=>{const n=[];!function(e,t,o,l){let r,i,a;i="element",a=(e,t)=>{console.log(e,t),"img"===e.tagName&&void 0!==t&&(console.log("Adding",e),n.push(e))},r=void 0,function(e,n,t,o){let l;l="element";const r=oe("element");!function e(n,o,l){const i=n&&"object"==typeof n?n:{};if("string"==typeof i.type){const e="string"==typeof i.tagName?i.tagName:"string"==typeof i.name?i.name:void 0;Object.defineProperty(a,"name",{value:"node ("+n.type+(e?"<"+e+">":"")+")"})}return a;function a(){let i,a,s,u=ie;if(r(n,o,l[l.length-1]||void 0)&&(u=function(e){return Array.isArray(e)?e:"number"==typeof e?[!0,e]:null==e?ie:[e]}(t(n,l)),u[0]===ae))return u;if("children"in n&&n.children){const t=n;if(t.children&&"skip"!==u[0])for(a=0,s=l.concat(t);a>-1&&a<t.children.length;){if(i=e(t.children[a],a,s)(),i[0]===ae)return i;a="number"==typeof i[1]?i[1]:a+1}}return u}}(e,void 0,[])()}(e,0,function(e,n){const t=n[n.length-1],o=t?t.children.indexOf(e):void 0;return a(e,o)})}(e);for(const e of n){const n=e.properties.src;console.log("Detected",n);let l=await $e(n);console.log("Got markdown",l);const r=Ke.fromString(l);let i;console.log("Validate!",r),i=qe(r,{}),console.log(i);const s=(t=`<img alt='' src='${i}' style='width:100%' />`,o={fragment:!0},ee(o?.fragment?function(e){const n=document.createElement("template");return n.innerHTML=e,n.content}(t):te.parseFromString(t,"text/html"),{})||{type:"root",children:[]});e.properties=a({},e.properties),e.tagName="div",e.children=s.children}var t,o};async function $e(n){let t="Loading";return n.trim().toLowerCase().startsWith("https://")||"undefined"!=typeof window?await fetch(n).then(e=>e.text()).then(e=>t=e):t=e.readFileSync(n,{encoding:"utf8",flag:"r"}),null===t?"":t}export{Ge as default,Ge as rehypeJsonCanvas};
//# sourceMappingURL=index.js.map
