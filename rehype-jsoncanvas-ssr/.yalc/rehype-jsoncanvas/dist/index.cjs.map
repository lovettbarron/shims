{"version":3,"file":"index.cjs","sources":["../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-dom/lib/index.js","../node_modules/hast-util-from-html-isomorphic/lib/browser.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../src/options.ts","../node_modules/bail/index.js","../node_modules/extend/index.js","../node_modules/is-plain-obj/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/index.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/trough/lib/index.js","../src/embed.ts","../src/jsoncanvas.ts","../node_modules/@trbn/jsoncanvas/dist/index.mjs","../src/plugin.ts","../node_modules/unist-util-visit/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Comment} HastComment\n * @typedef {import('hast').Doctype} HastDoctype\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n */\n\n/**\n * @callback AfterTransform\n *   Callback called when each node is transformed.\n * @param {Node} domNode\n *   DOM node that was handled.\n * @param {HastNodes} hastNode\n *   Corresponding hast node.\n * @returns {undefined | void}\n *   Nothing.\n *\n *   Note: `void` included until TS infers `undefined` nicely.\n *\n * @typedef Options\n *   Configuration.\n * @property {AfterTransform | null | undefined} [afterTransform]\n *   Callback called when each node is transformed (optional).\n */\n\nimport {h, s} from 'hastscript'\nimport {webNamespaces} from 'web-namespaces'\n\n/**\n * Transform a DOM tree to a hast tree.\n *\n * @param {Node} tree\n *   DOM tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   Equivalent hast node.\n */\nexport function fromDom(tree, options) {\n  return transform(tree, options || {}) || {type: 'root', children: []}\n}\n\n/**\n * @param {Node} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastNodes | undefined}\n *   Equivalent hast node.\n *\n *   Note that certain legacy DOM nodes (i.e., Attr nodes (2),  CDATA, processing instructions)\n */\nfunction transform(node, options) {\n  const transformed = one(node, options)\n  if (transformed && options.afterTransform)\n    options.afterTransform(node, transformed)\n  return transformed\n}\n\n/**\n * @param {Node} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastNodes | undefined}\n *   Equivalent hast node.\n */\nfunction one(node, options) {\n  switch (node.nodeType) {\n    case 1 /* Element */: {\n      const domNode = /** @type {Element} */ (node)\n      return element(domNode, options)\n    }\n\n    // Ignore: Attr (2).\n\n    case 3 /* Text */: {\n      const domNode = /** @type {Text} */ (node)\n      return text(domNode)\n    }\n\n    // Ignore: CDATA (4).\n    // Removed: Entity reference (5)\n    // Removed: Entity (6)\n    // Ignore: Processing instruction (7).\n\n    case 8 /* Comment */: {\n      const domNode = /** @type {Comment} */ (node)\n      return comment(domNode)\n    }\n\n    case 9 /* Document */: {\n      const domNode = /** @type {Document} */ (node)\n      return root(domNode, options)\n    }\n\n    case 10 /* Document type */: {\n      return doctype()\n    }\n\n    case 11 /* Document fragment */: {\n      const domNode = /** @type {DocumentFragment} */ (node)\n      return root(domNode, options)\n    }\n\n    default: {\n      return undefined\n    }\n  }\n}\n\n/**\n * Transform a document.\n *\n * @param {Document | DocumentFragment} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastRoot}\n *   Equivalent hast node.\n */\nfunction root(node, options) {\n  return {type: 'root', children: all(node, options)}\n}\n\n/**\n * Transform a doctype.\n *\n * @returns {HastDoctype}\n *   Equivalent hast node.\n */\nfunction doctype() {\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   DOM node to transform.\n * @returns {HastText}\n *   Equivalent hast node.\n */\nfunction text(node) {\n  return {type: 'text', value: node.nodeValue || ''}\n}\n\n/**\n * Transform a comment.\n *\n * @param {Comment} node\n *   DOM node to transform.\n * @returns {HastComment}\n *   Equivalent hast node.\n */\nfunction comment(node) {\n  return {type: 'comment', value: node.nodeValue || ''}\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {HastElement}\n *   Equivalent hast node.\n */\nfunction element(node, options) {\n  const space = node.namespaceURI\n  const fn = space === webNamespaces.svg ? s : h\n  const tagName =\n    space === webNamespaces.html ? node.tagName.toLowerCase() : node.tagName\n  /** @type {DocumentFragment | Element} */\n  const content =\n    // @ts-expect-error: DOM types are wrong, content can exist.\n    space === webNamespaces.html && tagName === 'template' ? node.content : node\n  const attributes = node.getAttributeNames()\n  /** @type {Record<string, string>} */\n  const props = {}\n  let index = -1\n\n  while (++index < attributes.length) {\n    props[attributes[index]] = node.getAttribute(attributes[index]) || ''\n  }\n\n  return fn(tagName, props, all(content, options))\n}\n\n/**\n * Transform child nodes in a parent.\n *\n * @param {Document | DocumentFragment | Element} node\n *   DOM node to transform.\n * @param {Options} options\n *   Configuration.\n * @returns {Array<HastRootContent>}\n *   Equivalent hast nodes.\n */\nfunction all(node, options) {\n  const nodes = node.childNodes\n  /** @type {Array<HastRootContent>} */\n  const children = []\n  let index = -1\n\n  while (++index < nodes.length) {\n    const child = transform(nodes[index], options)\n\n    if (child !== undefined) {\n      // @ts-expect-error Assume no document inside document.\n      children.push(child)\n    }\n  }\n\n  return children\n}\n","/**\n * @typedef {import('hast').Root} Root\n *\n * @typedef {typeof import('./index.js').fromHtmlIsomorphic} FromHtmlIsomorphic\n */\n\nimport {fromDom} from 'hast-util-from-dom'\n\nconst parser = new DOMParser()\n\n/** @type {FromHtmlIsomorphic} */\nexport function fromHtmlIsomorphic(value, options) {\n  const node = options?.fragment\n    ? parseFragment(value)\n    : parser.parseFromString(value, 'text/html')\n\n  return /** @type {Root} */ (fromDom(node))\n}\n\n/**\n * Parse as a fragment.\n *\n * @param {string} value\n * @returns {DocumentFragment}\n */\nfunction parseFragment(value) {\n  const template = document.createElement('template')\n  template.innerHTML = value\n  return template.content\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * Options for the jsoncanvas\n */\nexport interface Options {\n  /**\n   * Open links in a new tab\n   *\n   * Defaults to true\n   */\n  openEmbededInNewTab: boolean;\n\n  /**\n   * Render mode. Determines the canvas output mode\n   *\n   * Defaults to canvas\n   */\n  renderMode: \"svg\" | \"image\" | \"canvas\";\n\n  /**\n   * Canvas Buffer\n   *\n   * Defaults to 30\n   */\n  canvasBuffer: number;\n\n  /**\n   * Canvas node stroke width\n   *\n   * Defaults to 3\n   */\n  nodeStrokeWidth: number;\n\n  /**\n   * Canvas line stroke width\n   *\n   * Defaults to 5\n   */\n  lineStrokeWidth: number;\n}\n\n/**\n * Applies default values for any unspecified options\n */\nexport function applyDefaults(config: Partial<Options> = {}): Options {\n  return {\n    openEmbededInNewTab:\n      config.openEmbededInNewTab === undefined\n        ? true\n        : config.openEmbededInNewTab,\n    renderMode: config.renderMode === undefined ? \"canvas\" : config.renderMode,\n    canvasBuffer: config.canvasBuffer === undefined ? 30 : config.canvasBuffer,\n    nodeStrokeWidth:\n      config.nodeStrokeWidth === undefined ? 3 : config.nodeStrokeWidth,\n    lineStrokeWidth:\n      config.lineStrokeWidth === undefined ? 5 : config.lineStrokeWidth,\n  };\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","import { unified } from \"unified\";\nimport parse from \"remark-parse\";\nimport remark2rehype from \"remark-rehype\";\nimport rehypeStringify from \"rehype-stringify\";\nimport html2canvas from \"html2canvas\";\n\nimport { GenericNode } from \"@trbn/jsoncanvas\";\n\nimport { loadImage, Canvas, CanvasRenderingContext2D } from \"canvas\";\n// import { applyDefaults, Options } from \"./options\";\n\nconst imagesLoaded = [] as Array<any>;\n\nexport function checkImagesLoaded(callback: Function) {\n  let allLoaded = imagesLoaded.every((el) => el.complete);\n  console.group(\"Images loading\", imagesLoaded, allLoaded);\n  if (imagesLoaded.length < 1) return callback();\n  //   return callback();\n  if (allLoaded) callback();\n  else checkImagesLoaded(callback);\n}\n\n// This renders out the images\nexport async function drawEmbedded(\n  canvas: Canvas,\n  ctx: CanvasRenderingContext2D,\n  node: GenericNode | any\n) {\n  if (node.type === \"file\" && canvas) {\n    if (node.file.match(/\\.(jpg|jpeg|png|gif)$/i)) {\n      const drawImg = new Image() as any;\n      const img = await loadImage(node.file);\n\n      drawImg.onload = () => {\n        ctx.drawImage(\n          drawImg,\n          node.x + canvas.width / 2,\n          node.y + canvas.height / 2,\n          node.width,\n          node.height\n        );\n      };\n      drawImg.src = img.src;\n      imagesLoaded.push(drawImg);\n    }\n  }\n}\n\n// This renders out the images\nexport async function drawMarkdownEmbed(\n  canvas: Canvas,\n  ctx: CanvasRenderingContext2D,\n  node: GenericNode | any\n) {\n  if (node.type === \"file\" && canvas) {\n    if (node.file.match(/\\.(md|mdx)$/i)) {\n      const resp = await fetch(node.file);\n      const mdFile = await resp.text();\n      const renderedMarkdown = await unified()\n        .use(parse)\n        .use(remark2rehype) // Convert Markdown to HTML\n        .use(rehypeStringify)\n        .process(mdFile);\n\n      const htmlString = String(renderedMarkdown);\n      const div = document.createElement(\"div\");\n      div.innerHTML = htmlString;\n\n      div.style.width = `${node.width}px`;\n      div.style.height = `${node.height}px`;\n      div.style.color = \"black\";\n      div.style.backgroundColor = \"red\";\n      div.style.position = \"absolute\";\n      //   div.style.left = \"-9999px\";\n      document.body.appendChild(div);\n\n      // Use html2canvas to render the div to an image\n      const canvasElement = await html2canvas(div);\n      const img = new Image(node.width, node.height) as any;\n\n      img.onload = async () => {\n        await ctx.drawImage(\n          img,\n          node.x + canvas.width / 2,\n          node.y + canvas.height / 2,\n          node.width,\n          node.height\n        );\n\n        console.log(\"Markdown\", img);\n\n        // Cleanup\n        document.body.removeChild(div);\n      };\n      img.src = canvasElement.toDataURL();\n      imagesLoaded.push(img);\n    }\n  }\n}\n","import { JSONCanvas, Edge, GenericNode } from \"@trbn/jsoncanvas\";\n\nimport { createCanvas, Canvas, CanvasRenderingContext2D } from \"canvas\";\nimport { applyDefaults, Options } from \"./options\";\n\nexport function validate(jsonCanvasData: JSONCanvas) {\n  // Use the typescript lib to vlaidate?\n  console.log(\"Validate!\", jsonCanvasData);\n  return true;\n}\n\nimport { drawEmbedded, drawMarkdownEmbed, checkImagesLoaded } from \"./embed\";\n\nexport function render(\n  jsc: JSONCanvas,\n  config?: Partial<Options>\n): String | any | null {\n  const options = applyDefaults(config);\n  console.log(\"render\", jsc);\n\n  const { canvasWidth, canvasHeight, offsetX, offsetY } =\n    calculateMinimumCanvasSize(jsc);\n\n  console.log(canvasWidth, canvasHeight, offsetX, offsetY);\n\n  // Init Canvas objects\n  const { canvas, ctx } = initRender(\n    \"jsc\",\n    canvasWidth + offsetX,\n    canvasHeight + offsetY\n  );\n\n  if (canvas === null || ctx === null) return null;\n\n  // Draw nodes\n  jsc.getNodes().forEach((node) => {\n    drawNode(canvas, ctx, node, options);\n  });\n\n  // Draw Edges\n  jsc.getEdges().forEach((edge) => {\n    const fromNode = jsc.getNodes().find((node) => node.id === edge.fromNode);\n    const toNode = jsc.getNodes().find((node) => node.id === edge.toNode);\n    if (toNode !== undefined && fromNode !== undefined)\n      drawEdge(canvas, ctx, toNode, fromNode, edge, options);\n  });\n\n  return checkImagesLoaded(() => renderToBuffer(canvas));\n}\n\nfunction renderToBuffer(canvas: Canvas, config?: Partial<Options>) {\n  const options = applyDefaults(config);\n\n  if (options.renderMode == \"svg\" || options.renderMode == \"canvas\") {\n    if (typeof window !== \"undefined\") {\n      return canvas.toDataURL(); // This isn't the right approach\n    } else {\n      return canvas && canvas.toBuffer(); // svg declaration is on canvas\n    }\n  } else return canvas.toDataURL();\n}\n\nfunction initRender(\n  id: string,\n  width: number,\n  height: number,\n  config?: Partial<Options>\n) {\n  const options = applyDefaults(config);\n\n  const canvas = createCanvas(\n    width,\n    height,\n    options.renderMode === \"svg\" ? \"svg\" : undefined\n  ); // This basically sets up the render mode as SVG if its defined as such, which impacts how it is exprted as a buffer\n\n  if (!canvas) {\n    console.error(`Canvas element with id '${id}' not found.`);\n    return { canvas: null, ctx: null };\n  }\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext(\"2d\");\n\n  if (!ctx) {\n    console.error(\"Unable to get canvas context.\");\n    return { canvas, ctx: null };\n  }\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.font = `32px`;\n\n  return {\n    canvas,\n    ctx,\n  };\n}\n\nasync function drawNode(\n  canvas: Canvas,\n  ctx: CanvasRenderingContext2D,\n  node: GenericNode | any,\n  config?: Partial<Options>\n) {\n  const options = applyDefaults(config);\n\n  console.log(\"Drawing Node\", node);\n\n  ctx.fillStyle = \"rgba(255, 255, 255, .5)\";\n  ctx.strokeStyle = \"rgba(0,0,0,1)\";\n\n  ctx.beginPath();\n  if (node.color === \"1\") {\n    ctx.fillStyle = \"rgba(255, 0, 0, .5)\";\n    ctx.strokeStyle = \"rgba(255,0,0,1)\";\n  } else if (node.color === \"2\") {\n    ctx.fillStyle = \"rgba(255, 100, 0, .5)\";\n    ctx.strokeStyle = \"rgba(255,100,0,1)\";\n  } else if (node.color === \"3\") {\n    ctx.fillStyle = \"rgba(255, 255, 0, .5)\";\n    ctx.strokeStyle = \"rgba(255,255,0,1)\";\n  } else if (node.color === \"4\") {\n    ctx.fillStyle = \"rgba(0, 255, 100, .5)\";\n    ctx.strokeStyle = \"rgba(0,100,0,1)\";\n  } else if (node.color === \"5\") {\n    ctx.fillStyle = \"rgba(0, 255, 255, .5)\";\n    ctx.strokeStyle = \"rgba(0,255,255,1)\";\n  } else if (node.color === \"6\") {\n    ctx.fillStyle = \"rgba(100, 10, 100, .5)\";\n    ctx.strokeStyle = \"rgba(100,10,100,1)\";\n  }\n  ctx.roundRect(\n    node.x + canvas.width / 2,\n    node.y + canvas.height / 2,\n    node.width,\n    node.height,\n    [5]\n  );\n\n  drawEmbedded(canvas, ctx, node);\n  drawMarkdownEmbed(canvas, ctx, node);\n\n  ctx.lineWidth = options.nodeStrokeWidth;\n  ctx.stroke();\n  ctx.fill();\n  ctx.closePath();\n\n  ctx.fillStyle = \"rgba(0, 0, 0, 1)\";\n  if (node.label) {\n    ctx.fillText(\n      node.label,\n      node.x + 5 + canvas.width / 2,\n      node.y + 20 + canvas.height / 2\n    );\n  }\n\n  if (node.type === \"text\" && node.text) {\n    ctx.fillText(\n      node.text,\n      node.x + 5 + canvas.width / 2,\n      node.y + 40 + canvas.height / 2\n    );\n  }\n}\n\nfunction drawEdge(\n  canvas: Canvas,\n  ctx: CanvasRenderingContext2D,\n  toNode: GenericNode,\n  fromNode: GenericNode,\n  edge: Edge | any,\n  config?: Partial<Options>\n) {\n  const options = applyDefaults(config);\n\n  ctx.lineWidth = options.lineStrokeWidth;\n  ctx.strokeStyle = \"rgba(0,0,0,1)\";\n\n  if (fromNode && toNode) {\n    let startX =\n      fromNode.x +\n      (edge.fromSide == \"top\" || edge.fromSide == \"bottom\"\n        ? fromNode.width / 2\n        : fromNode.width) +\n      canvas.width / 2;\n    let startY = fromNode.y + fromNode.height / 2 + canvas.height / 2;\n    let endX =\n      toNode.x +\n      (edge.toSide == \"top\" || edge.toSide == \"bottom\"\n        ? toNode.width / 2\n        : toNode.width) +\n      canvas.width / 2;\n    let endY = toNode.y + toNode.height / 2 + canvas.height / 2;\n\n    if (edge.fromSide === \"left\") {\n      startX = fromNode.x + canvas.width / 2;\n    } else if (edge.fromSide === \"top\") {\n      startY = fromNode.y + canvas.height / 2;\n    } else if (edge.fromSide === \"bottom\") {\n      startY = fromNode.y + fromNode.height + canvas.height / 2;\n    }\n\n    if (edge.toSide === \"right\") {\n      endX = toNode.x + toNode.width + canvas.width / 2;\n    } else if (edge.toSide === \"top\") {\n      endY = toNode.y + canvas.height / 2;\n    } else if (edge.toSide === \"bottom\") {\n      endY = toNode.y + toNode.height + canvas.height / 2;\n    } else if (edge.toSide === \"left\") {\n      endX = toNode.x + canvas.width / 2;\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    // ctx.lineTo(endX, endY);\n    const cp1 = {\n      x: startX,\n      y: endY,\n    };\n\n    const cp2 = {\n      x: endX,\n      y: startY,\n    };\n\n    ctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, endX, endY);\n    ctx.stroke();\n    ctx.closePath();\n\n    const t = 1.0; // At the end of the curve\n    const dx =\n      3 * (1 - t) * (1 - t) * (cp1.x - startX) +\n      6 * (1 - t) * t * (cp2.x - cp1.x) +\n      3 * t * t * (endX - cp2.x);\n    const dy =\n      3 * (1 - t) * (1 - t) * (cp1.y - startY) +\n      6 * (1 - t) * t * (cp2.y - cp1.y) +\n      3 * t * t * (endY - cp2.y);\n    const angle = Math.atan2(dy, dx);\n\n    // Draw arrowhead\n    const headlen = 20; // length of head in pixels\n    ctx.beginPath();\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(\n      endX - headlen * Math.cos(angle - Math.PI / 6),\n      endY - headlen * Math.sin(angle - Math.PI / 6)\n    );\n    ctx.lineTo(\n      endX - headlen * Math.cos(angle + Math.PI / 6),\n      endY - headlen * Math.sin(angle + Math.PI / 6)\n    );\n    ctx.lineTo(endX, endY);\n    ctx.lineTo(\n      endX - headlen * Math.cos(angle - Math.PI / 6),\n      endY - headlen * Math.sin(angle - Math.PI / 6)\n    );\n    ctx.stroke();\n    ctx.fill();\n  }\n}\n\nfunction calculateMinimumCanvasSize(canvas: JSONCanvas) {\n  let minX = Infinity,\n    minY = Infinity,\n    maxX = -Infinity,\n    maxY = -Infinity;\n\n  canvas.getNodes().forEach((node) => {\n    minX = Math.min(minX, node.x);\n    minY = Math.min(minY, node.y);\n    maxX = Math.max(maxX, node.x + node.width);\n    maxY = Math.max(maxY, node.y + node.height);\n  });\n\n  const canvasWidth = maxX - minX;\n  const canvasHeight = maxY - minY;\n\n  return { canvasWidth, canvasHeight, offsetX: -minX, offsetY: -minY };\n}\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass JSONCanvas {\n  constructor(nodes, edges) {\n    __publicField(this, \"nodes\", []);\n    __publicField(this, \"edges\", []);\n    if (nodes) {\n      this.nodes = nodes;\n    }\n    if (edges) {\n      this.edges = edges;\n    }\n  }\n  addNode(node) {\n    if (this.nodes.find((n) => n.id === node.id)) {\n      throw new Error(\"A node with the same ID already exists in this.nodes\");\n    }\n    this.nodes.push(node);\n  }\n  addEdge(edge) {\n    if (this.edges.find((e) => e.id === edge.id)) {\n      throw new Error(\"An edge with the same ID already exists in this.edges\");\n    }\n    this.edges.push(edge);\n  }\n  getNode(id) {\n    return this.nodes.find((n) => n.id === id);\n  }\n  getEdge(id) {\n    return this.edges.find((e) => e.id === id);\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  getEdges() {\n    return this.edges;\n  }\n  removeNode(id) {\n    this.nodes = this.nodes.filter((n) => n.id !== id);\n    this.edges = this.edges.filter((e) => e.fromNode !== id && e.toNode !== id);\n  }\n  removeEdge(id) {\n    this.edges = this.edges.filter((e) => e.id !== id);\n  }\n  toString() {\n    return JSON.stringify({\n      nodes: this.nodes,\n      edges: this.edges\n    });\n  }\n  static fromString(json) {\n    const obj = JSON.parse(json);\n    return new JSONCanvas(obj.nodes, obj.edges);\n  }\n}\n\nexport { JSONCanvas, JSONCanvas as default };\n","import type { Plugin } from \"unified\";\nimport type { Element, ElementContent, Root } from \"hast\";\nimport { fromHtmlIsomorphic } from \"hast-util-from-html-isomorphic\";\nimport { visit } from \"unist-util-visit\";\nimport fs from \"fs\";\nimport { validate, render } from \"./jsoncanvas\";\nimport JSONCanvas from \"@trbn/jsoncanvas\";\n\n/*\n\nLet's think this through.\nI need to fetch the relevant embedded .canvas elements, and parse across two different ways of embedding, ![](file.canvas) and [[file.canvas]]\n\nThen I need to generate a canvas node, and populate it with the relevent objects per the jsoncanvas spec\n\nThen I need to pass this populated canvas back to rehype to be placed into the rendered html stream\n\nCore Assumptions:\n- Assume serverside, pga markdown\n- Assume a canvas fallback incase of old browser\n- Assume a need for arbitrary sized canvas\n- Assume a fallback for improperly formatted canvas\n\nThings decide:\n- Navigable/zoomable?\n- Themeable? > Probably want a css module that can be overridden in config\n\n*/\n\nexport const rehypeJsonCanvas: Plugin<[], Root> = () => {\n  return async (tree) => {\n    const nodesToReplace = [] as Array<Element>;\n\n    // Iterate over the markdown file as tree\n    visit(tree, \"element\", (node, index) => {\n      console.log(node, index);\n\n      // only match image embeds\n      if (node.tagName !== \"img\" || index === undefined) {\n        return;\n      }\n      console.log(\"Adding\", node);\n      nodesToReplace.push(node);\n      // index = index += 1;\n    });\n\n    for (const node of nodesToReplace) {\n      const canvasPath = node.properties.src as string;\n      console.log(\"Detected\", canvasPath);\n      let canvasMarkdown = await getCanvasFromEmbed(canvasPath);\n\n      console.log(\"Got markdown\", canvasMarkdown);\n      const jsonCanvasFromString = JSONCanvas.fromString(canvasMarkdown);\n\n      let canvas;\n\n      if (validate(jsonCanvasFromString)) {\n        canvas = render(jsonCanvasFromString, {});\n      } else {\n        canvas = \"<div>Not a properly formatted JsonCanvas</div>\";\n      }\n\n      console.log(canvas);\n\n      const canvasHast = fromHtmlIsomorphic(\n        `<img alt='' src='${canvas}' style='width:100%' />`,\n        {\n          fragment: true,\n        }\n      );\n      node.properties = {\n        ...node.properties,\n      };\n      node.tagName = \"div\";\n      node.children = canvasHast.children as ElementContent[];\n    }\n  };\n};\n\nasync function getCanvasFromEmbed(path: string): Promise<string> {\n  let canvasMarkdown = \"Loading\";\n  const webcheck = path.trim().toLowerCase();\n\n  if (webcheck.startsWith(\"https://\") || typeof window !== \"undefined\") {\n    await fetch(path)\n      .then((res) => res.text())\n      .then((text) => (canvasMarkdown = text));\n  } else {\n    // To accomodate ssr\n    canvasMarkdown = fs.readFileSync(path, {\n      encoding: \"utf8\",\n      flag: \"r\",\n    });\n  }\n  if (canvasMarkdown === null) return \"\";\n\n  return canvasMarkdown;\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n"],"names":["Schema","constructor","property","normal","space","this","merge","definitions","index","length","Object","assign","normalize","value","toLowerCase","prototype","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","types","DefinedInfo","mask","super","mark","check","values","key","own","hasOwnProperty","create","definition","prop","properties","call","info","transform","attributes","includes","xlink","_","slice","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","name","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","style","tabIndex","target","title","translate","type","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","kebab","$0","camelcase","charAt","toUpperCase","htmlBase","svgBase","parse","tokens","input","String","indexOf","token","trim","push","search","split","buttonTypes","Set","createH","schema","defaultTagName","caseSensitive","adjust","createAdjustMap","selector","children","node","unshift","props","previous","tagName","lastIndex","match","exec","subvalue","Array","isArray","parseSelector","has","addProperty","addChild","Type","test","rest","replace","dashes","find","Number","isNaN","spaces","commas","join","parsePrimitive","concat","finalResult","nodes","Error","h","s","webNamespaces","mathml","options","transformed","nodeType","namespaceURI","fn","getAttributeNames","getAttribute","all","element","nodeValue","comment","root","one","afterTransform","childNodes","child","undefined","parser","DOMParser","convert","ok","castFactory","tests","parameters","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","testFunction","parent","Boolean","looksLikeANode","empty","EXIT","applyDefaults","config","openEmbededInNewTab","renderMode","canvasBuffer","nodeStrokeWidth","lineStrokeWidth","bail","error","hasOwn","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","enumerable","configurable","newValue","writable","getProperty","extend","copy","copyIsArray","clone","arguments","i","deep","getPrototypeOf","Symbol","toStringTag","iterator","point","line","column","position","pos","VFileMessage","causeOrReason","optionsOrParentOrPlace","reason","legacyCause","place","ancestors","cause","message","ruleId","source","fatal","stack","file","ext","TypeError","assertPath","seenNonSlash","codePointAt","firstNonSlashEnd","extIndex","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","JSON","stringify","isUrl","fileUrlOrPath","protocol","auth","VFile","isUint8Array","cwd","history","messages","basename","assertNonEmpty","assertPart","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","stem","URL","url","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","urlToPath","fail","encoding","TextDecoder","decode","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","compiler","freezeIndex","frozen","namespace","transformers","fns","pipeline","run","middlewareIndex","callback","pop","next","output","middleware","called","fnExpectsCallback","done","then","use","middelware","trough","destination","assertUnfrozen","freeze","self","attacher","transformer","POSITIVE_INFINITY","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","resolve","reject","parseTree","realDone","tree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","add","plugin","plugins","settings","entryIndex","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","drawEmbedded","canvas","ctx","_temp2","_temp","drawImg","Image","loadImage","img","onload","drawImage","imagesLoaded","e","checkImagesLoaded","allLoaded","every","el","console","group","render","jsc","log","_calculateMinimumCanv","minX","Infinity","minY","maxX","maxY","getNodes","forEach","Math","canvasWidth","canvasHeight","offsetX","offsetY","calculateMinimumCanvasSize","_initRender","initRender","fillStyle","strokeStyle","beginPath","roundRect","_temp4","_temp3","fetch","resp","mdFile","remark2rehype","rehypeStringify","renderedMarkdown","htmlString","div","document","createElement","innerHTML","backgroundColor","body","appendChild","html2canvas","canvasElement","removeChild","toDataURL","drawMarkdownEmbed","lineWidth","closePath","fillText","drawNode","getEdges","edge","fromNode","toNode","startX","fromSide","startY","endX","toSide","endY","moveTo","cp1","cp2","bezierCurveTo","angle","atan2","headlen","lineTo","cos","PI","sin","drawEdge","renderToBuffer","window","toBuffer","createCanvas","getContext","clearRect","font","__defProp","__publicField","__defNormalProp","JSONCanvas","edges","addNode","n","addEdge","getNode","getEdge","removeNode","removeEdge","fromString","json","_settle","pact","state","_Pact","bind","v","o","onFulfilled","onRejected","_isSettledPact","thenable","rehypeJsonCanvas","nodesToReplace","testOrVisitor","visitorOrReverse","maybeReverse","reverse","visitor","visit","factory","parents","subresult","grandparents","toResult","nodeAsParent","visitParents","_forOf","canvasPath","canvasMarkdown","webcheck","startsWith","res","fs","readFileSync","flag","getCanvasFromEmbed","jsonCanvasFromString","canvasHast","fragment","template","parseFragment","parseFromString","_extends"],"mappings":"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"}