import n from"fs";import{createCanvas as e}from"canvas";function l(){return l=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var l=arguments[e];for(var t in l)({}).hasOwnProperty.call(l,t)&&(n[t]=l[t])}return n},l.apply(null,arguments)}class t{constructor(n,e,l){this.property=n,this.normal=e,l&&(this.space=l)}}function o(n,e){const l={},o={};let r=-1;for(;++r<n.length;)Object.assign(l,n[r].property),Object.assign(o,n[r].normal);return new t(l,o,e)}function r(n){return n.toLowerCase()}t.prototype.property={},t.prototype.normal={},t.prototype.space=null;class a{constructor(n,e){this.property=n,this.attribute=e}}a.prototype.space=null,a.prototype.boolean=!1,a.prototype.booleanish=!1,a.prototype.overloadedBoolean=!1,a.prototype.number=!1,a.prototype.commaSeparated=!1,a.prototype.spaceSeparated=!1,a.prototype.commaOrSpaceSeparated=!1,a.prototype.mustUseProperty=!1,a.prototype.defined=!1;let i=0;const u=f(),s=f(),c=f(),d=f(),p=f(),g=f(),h=f();function f(){return 2**++i}var m={__proto__:null,boolean:u,booleanish:s,overloadedBoolean:c,number:d,spaceSeparated:p,commaSeparated:g,commaOrSpaceSeparated:h};const y=Object.keys(m);class v extends a{constructor(n,e,l,t){let o=-1;if(super(n,e),b(this,"space",t),"number"==typeof l)for(;++o<y.length;){const n=y[o];b(this,y[o],(l&m[n])===m[n])}}}function b(n,e,l){l&&(n[e]=l)}v.prototype.defined=!0;const w={}.hasOwnProperty;function S(n){const e={},l={};let o;for(o in n.properties)if(w.call(n.properties,o)){const t=n.properties[o],a=new v(o,n.transform(n.attributes||{},o),t,n.space);n.mustUseProperty&&n.mustUseProperty.includes(o)&&(a.mustUseProperty=!0),e[o]=a,l[r(o)]=o,l[r(a.attribute)]=o}return new t(e,l,n.space)}const x=S({space:"xlink",transform:(n,e)=>"xlink:"+e.slice(5).toLowerCase(),properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}}),k=S({space:"xml",transform:(n,e)=>"xml:"+e.slice(3).toLowerCase(),properties:{xmlLang:null,xmlBase:null,xmlSpace:null}});function C(n,e){return e in n?n[e]:e}function P(n,e){return C(n,e.toLowerCase())}const M=S({space:"xmlns",attributes:{xmlnsxlink:"xmlns:xlink"},transform:P,properties:{xmlns:null,xmlnsXLink:null}}),L=S({transform:(n,e)=>"role"===e?e:"aria-"+e.slice(4).toLowerCase(),properties:{ariaActiveDescendant:null,ariaAtomic:s,ariaAutoComplete:null,ariaBusy:s,ariaChecked:s,ariaColCount:d,ariaColIndex:d,ariaColSpan:d,ariaControls:p,ariaCurrent:null,ariaDescribedBy:p,ariaDetails:null,ariaDisabled:s,ariaDropEffect:p,ariaErrorMessage:null,ariaExpanded:s,ariaFlowTo:p,ariaGrabbed:s,ariaHasPopup:null,ariaHidden:s,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:p,ariaLevel:d,ariaLive:null,ariaModal:s,ariaMultiLine:s,ariaMultiSelectable:s,ariaOrientation:null,ariaOwns:p,ariaPlaceholder:null,ariaPosInSet:d,ariaPressed:s,ariaReadOnly:s,ariaRelevant:null,ariaRequired:s,ariaRoleDescription:p,ariaRowCount:d,ariaRowIndex:d,ariaRowSpan:d,ariaSelected:s,ariaSetSize:d,ariaSort:null,ariaValueMax:d,ariaValueMin:d,ariaValueNow:d,ariaValueText:null,role:null}}),O=S({space:"html",attributes:{acceptcharset:"accept-charset",classname:"class",htmlfor:"for",httpequiv:"http-equiv"},transform:P,mustUseProperty:["checked","multiple","muted","selected"],properties:{abbr:null,accept:g,acceptCharset:p,accessKey:p,action:null,allow:null,allowFullScreen:u,allowPaymentRequest:u,allowUserMedia:u,alt:null,as:null,async:u,autoCapitalize:null,autoComplete:p,autoFocus:u,autoPlay:u,blocking:p,capture:null,charSet:null,checked:u,cite:null,className:p,cols:d,colSpan:null,content:null,contentEditable:s,controls:u,controlsList:p,coords:d|g,crossOrigin:null,data:null,dateTime:null,decoding:null,default:u,defer:u,dir:null,dirName:null,disabled:u,download:c,draggable:s,encType:null,enterKeyHint:null,fetchPriority:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:u,formTarget:null,headers:p,height:d,hidden:u,high:d,href:null,hrefLang:null,htmlFor:p,httpEquiv:p,id:null,imageSizes:null,imageSrcSet:null,inert:u,inputMode:null,integrity:null,is:null,isMap:u,itemId:null,itemProp:p,itemRef:p,itemScope:u,itemType:p,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:u,low:d,manifest:null,max:null,maxLength:d,media:null,method:null,min:null,minLength:d,multiple:u,muted:u,name:null,nonce:null,noModule:u,noValidate:u,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforeMatch:null,onBeforePrint:null,onBeforeToggle:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onScrollEnd:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:u,optimum:d,pattern:null,ping:p,placeholder:null,playsInline:u,popover:null,popoverTarget:null,popoverTargetAction:null,poster:null,preload:null,readOnly:u,referrerPolicy:null,rel:p,required:u,reversed:u,rows:d,rowSpan:d,sandbox:p,scope:null,scoped:u,seamless:u,selected:u,shadowRootClonable:u,shadowRootDelegatesFocus:u,shadowRootMode:null,shape:null,size:d,sizes:null,slot:null,span:d,spellCheck:s,src:null,srcDoc:null,srcLang:null,srcSet:null,start:d,step:null,style:null,tabIndex:d,target:null,title:null,translate:null,type:null,typeMustMatch:u,useMap:null,value:s,width:d,wrap:null,writingSuggestions:null,align:null,aLink:null,archive:p,axis:null,background:null,bgColor:null,border:d,borderColor:null,bottomMargin:d,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:u,declare:u,event:null,face:null,frame:null,frameBorder:null,hSpace:d,leftMargin:d,link:null,longDesc:null,lowSrc:null,marginHeight:d,marginWidth:d,noResize:u,noHref:u,noShade:u,noWrap:u,object:null,profile:null,prompt:null,rev:null,rightMargin:d,rules:null,scheme:null,scrolling:s,standby:null,summary:null,text:null,topMargin:d,valueType:null,version:null,vAlign:null,vLink:null,vSpace:d,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:u,disableRemotePlayback:u,prefix:null,property:null,results:d,security:null,unselectable:null}}),D=S({space:"svg",attributes:{accentHeight:"accent-height",alignmentBaseline:"alignment-baseline",arabicForm:"arabic-form",baselineShift:"baseline-shift",capHeight:"cap-height",className:"class",clipPath:"clip-path",clipRule:"clip-rule",colorInterpolation:"color-interpolation",colorInterpolationFilters:"color-interpolation-filters",colorProfile:"color-profile",colorRendering:"color-rendering",crossOrigin:"crossorigin",dataType:"datatype",dominantBaseline:"dominant-baseline",enableBackground:"enable-background",fillOpacity:"fill-opacity",fillRule:"fill-rule",floodColor:"flood-color",floodOpacity:"flood-opacity",fontFamily:"font-family",fontSize:"font-size",fontSizeAdjust:"font-size-adjust",fontStretch:"font-stretch",fontStyle:"font-style",fontVariant:"font-variant",fontWeight:"font-weight",glyphName:"glyph-name",glyphOrientationHorizontal:"glyph-orientation-horizontal",glyphOrientationVertical:"glyph-orientation-vertical",hrefLang:"hreflang",horizAdvX:"horiz-adv-x",horizOriginX:"horiz-origin-x",horizOriginY:"horiz-origin-y",imageRendering:"image-rendering",letterSpacing:"letter-spacing",lightingColor:"lighting-color",markerEnd:"marker-end",markerMid:"marker-mid",markerStart:"marker-start",navDown:"nav-down",navDownLeft:"nav-down-left",navDownRight:"nav-down-right",navLeft:"nav-left",navNext:"nav-next",navPrev:"nav-prev",navRight:"nav-right",navUp:"nav-up",navUpLeft:"nav-up-left",navUpRight:"nav-up-right",onAbort:"onabort",onActivate:"onactivate",onAfterPrint:"onafterprint",onBeforePrint:"onbeforeprint",onBegin:"onbegin",onCancel:"oncancel",onCanPlay:"oncanplay",onCanPlayThrough:"oncanplaythrough",onChange:"onchange",onClick:"onclick",onClose:"onclose",onCopy:"oncopy",onCueChange:"oncuechange",onCut:"oncut",onDblClick:"ondblclick",onDrag:"ondrag",onDragEnd:"ondragend",onDragEnter:"ondragenter",onDragExit:"ondragexit",onDragLeave:"ondragleave",onDragOver:"ondragover",onDragStart:"ondragstart",onDrop:"ondrop",onDurationChange:"ondurationchange",onEmptied:"onemptied",onEnd:"onend",onEnded:"onended",onError:"onerror",onFocus:"onfocus",onFocusIn:"onfocusin",onFocusOut:"onfocusout",onHashChange:"onhashchange",onInput:"oninput",onInvalid:"oninvalid",onKeyDown:"onkeydown",onKeyPress:"onkeypress",onKeyUp:"onkeyup",onLoad:"onload",onLoadedData:"onloadeddata",onLoadedMetadata:"onloadedmetadata",onLoadStart:"onloadstart",onMessage:"onmessage",onMouseDown:"onmousedown",onMouseEnter:"onmouseenter",onMouseLeave:"onmouseleave",onMouseMove:"onmousemove",onMouseOut:"onmouseout",onMouseOver:"onmouseover",onMouseUp:"onmouseup",onMouseWheel:"onmousewheel",onOffline:"onoffline",onOnline:"ononline",onPageHide:"onpagehide",onPageShow:"onpageshow",onPaste:"onpaste",onPause:"onpause",onPlay:"onplay",onPlaying:"onplaying",onPopState:"onpopstate",onProgress:"onprogress",onRateChange:"onratechange",onRepeat:"onrepeat",onReset:"onreset",onResize:"onresize",onScroll:"onscroll",onSeeked:"onseeked",onSeeking:"onseeking",onSelect:"onselect",onShow:"onshow",onStalled:"onstalled",onStorage:"onstorage",onSubmit:"onsubmit",onSuspend:"onsuspend",onTimeUpdate:"ontimeupdate",onToggle:"ontoggle",onUnload:"onunload",onVolumeChange:"onvolumechange",onWaiting:"onwaiting",onZoom:"onzoom",overlinePosition:"overline-position",overlineThickness:"overline-thickness",paintOrder:"paint-order",panose1:"panose-1",pointerEvents:"pointer-events",referrerPolicy:"referrerpolicy",renderingIntent:"rendering-intent",shapeRendering:"shape-rendering",stopColor:"stop-color",stopOpacity:"stop-opacity",strikethroughPosition:"strikethrough-position",strikethroughThickness:"strikethrough-thickness",strokeDashArray:"stroke-dasharray",strokeDashOffset:"stroke-dashoffset",strokeLineCap:"stroke-linecap",strokeLineJoin:"stroke-linejoin",strokeMiterLimit:"stroke-miterlimit",strokeOpacity:"stroke-opacity",strokeWidth:"stroke-width",tabIndex:"tabindex",textAnchor:"text-anchor",textDecoration:"text-decoration",textRendering:"text-rendering",transformOrigin:"transform-origin",typeOf:"typeof",underlinePosition:"underline-position",underlineThickness:"underline-thickness",unicodeBidi:"unicode-bidi",unicodeRange:"unicode-range",unitsPerEm:"units-per-em",vAlphabetic:"v-alphabetic",vHanging:"v-hanging",vIdeographic:"v-ideographic",vMathematical:"v-mathematical",vectorEffect:"vector-effect",vertAdvY:"vert-adv-y",vertOriginX:"vert-origin-x",vertOriginY:"vert-origin-y",wordSpacing:"word-spacing",writingMode:"writing-mode",xHeight:"x-height",playbackOrder:"playbackorder",timelineBegin:"timelinebegin"},transform:C,properties:{about:h,accentHeight:d,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:d,amplitude:d,arabicForm:null,ascent:d,attributeName:null,attributeType:null,azimuth:d,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:d,by:null,calcMode:null,capHeight:d,className:p,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:d,diffuseConstant:d,direction:null,display:null,dur:null,divisor:d,dominantBaseline:null,download:u,dx:null,dy:null,edgeMode:null,editable:null,elevation:d,enableBackground:null,end:null,event:null,exponent:d,externalResourcesRequired:null,fill:null,fillOpacity:d,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:g,g2:g,glyphName:g,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:d,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:d,horizOriginX:d,horizOriginY:d,id:null,ideographic:d,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:d,k:d,k1:d,k2:d,k3:d,k4:d,kernelMatrix:h,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:d,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:d,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:d,overlineThickness:d,paintOrder:null,panose1:null,path:null,pathLength:d,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:p,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:d,pointsAtY:d,pointsAtZ:d,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:h,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:h,rev:h,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:h,requiredFeatures:h,requiredFonts:h,requiredFormats:h,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:d,specularExponent:d,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:d,strikethroughThickness:d,string:null,stroke:null,strokeDashArray:h,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:d,strokeOpacity:d,strokeWidth:null,style:null,surfaceScale:d,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:h,tabIndex:d,tableValues:null,target:null,targetX:d,targetY:d,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:h,to:null,transform:null,transformOrigin:null,u1:null,u2:null,underlinePosition:d,underlineThickness:d,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:d,values:null,vAlphabetic:d,vMathematical:d,vectorEffect:null,vHanging:d,vIdeographic:d,version:null,vertAdvY:d,vertOriginX:d,vertOriginY:d,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:d,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null}}),A=/^data[-\w.:]+$/i,R=/-[a-z]/g,T=/[A-Z]/g;function E(n){return"-"+n.toLowerCase()}function N(n){return n.charAt(1).toUpperCase()}const U=o([k,x,M,L,O],"html"),I=o([k,x,M,L,D],"svg");function B(n){const e=[],l=String(n||"");let t=l.indexOf(","),o=0,r=!1;for(;!r;){-1===t&&(t=l.length,r=!0);const n=l.slice(o,t).trim();!n&&r||e.push(n),o=t+1,t=l.indexOf(",",o)}return e}const z=/[#.]/g;function F(n){const e=String(n||"").trim();return e?e.split(/[ \t\n\r\f]+/g):[]}const j=new Set(["button","menu","reset","submit"]),H={}.hasOwnProperty;function V(n,e,l){const t=l&&function(n){const e={};let l=-1;for(;++l<n.length;)e[n[l].toLowerCase()]=n[l];return e}(l);return function(l,o,...r){let a,i=-1;if(null==l)a={type:"root",children:[]},r.unshift(o);else if(a=function(n,e){const l=n||"",t={};let o,r,a=0;for(;a<l.length;){z.lastIndex=a;const n=z.exec(l),e=l.slice(a,n?n.index:l.length);e&&(o?"#"===o?t.id=e:Array.isArray(t.className)?t.className.push(e):t.className=[e]:r=e,a+=e.length),n&&(o=n[0],a++)}return{type:"element",tagName:r||e||"div",properties:t,children:[]}}(l,e),a.tagName=a.tagName.toLowerCase(),t&&H.call(t,a.tagName)&&(a.tagName=t[a.tagName]),s=a.tagName,null==(u=o)||"object"!=typeof u||Array.isArray(u)||"input"!==s&&u.type&&"string"==typeof u.type&&("children"in u&&Array.isArray(u.children)||("button"===s?!j.has(u.type.toLowerCase()):"value"in u)))r.unshift(o);else{let e;for(e in o)H.call(o,e)&&W(n,a.properties,e,o[e])}for(var u,s;++i<r.length;)q(a.children,r[i]);return"element"===a.type&&"template"===a.tagName&&(a.content={type:"root",children:a.children},a.children=[]),a}}function W(n,e,l,t){const o=function(n,e){const l=r(e);let t=e,o=a;if(l in n.normal)return n.property[n.normal[l]];if(l.length>4&&"data"===l.slice(0,4)&&A.test(e)){if("-"===e.charAt(4)){const n=e.slice(5).replace(R,N);t="data"+n.charAt(0).toUpperCase()+n.slice(1)}else{const n=e.slice(4);if(!R.test(n)){let l=n.replace(T,E);"-"!==l.charAt(0)&&(l="-"+l),e="data"+l}}o=v}return new o(t,e)}(n,l);let i,u=-1;if(null!=t){if("number"==typeof t){if(Number.isNaN(t))return;i=t}else i="boolean"==typeof t?t:"string"==typeof t?o.spaceSeparated?F(t):o.commaSeparated?B(t):o.commaOrSpaceSeparated?F(B(t).join(" ")):K(o,o.property,t):Array.isArray(t)?t.concat():"style"===o.property?function(n){const e=[];let l;for(l in n)H.call(n,l)&&e.push([l,n[l]].join(": "));return e.join("; ")}(t):String(t);if(Array.isArray(i)){const n=[];for(;++u<i.length;){const e=K(o,o.property,i[u]);n[u]=e}i=n}"className"===o.property&&Array.isArray(e.className)&&(i=e.className.concat(i)),e[o.property]=i}}function q(n,e){let l=-1;if(null==e);else if("string"==typeof e||"number"==typeof e)n.push({type:"text",value:String(e)});else if(Array.isArray(e))for(;++l<e.length;)q(n,e[l]);else{if("object"!=typeof e||!("type"in e))throw new Error("Expected node, nodes, or string, got `"+e+"`");"root"===e.type?q(n,e.children):n.push(e)}}function K(n,e,l){if("string"==typeof l){if(n.number&&l&&!Number.isNaN(Number(l)))return Number(l);if((n.boolean||n.overloadedBoolean)&&(""===l||r(l)===r(e)))return!0}return l}const X=V(U,"div"),G=V(I,"g",["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","solidColor","textArea","textPath"]),Y={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function J(n,e){const l=function(n,e){switch(n.nodeType){case 1:return function(n,e){const l=n.namespaceURI,t=l===Y.svg?G:X,o=l===Y.html?n.tagName.toLowerCase():n.tagName,r=l===Y.html&&"template"===o?n.content:n,a=n.getAttributeNames(),i={};let u=-1;for(;++u<a.length;)i[a[u]]=n.getAttribute(a[u])||"";return t(o,i,Z(r,e))}(n,e);case 3:return function(n){return{type:"text",value:n.nodeValue||""}}(n);case 8:return function(n){return{type:"comment",value:n.nodeValue||""}}(n);case 9:case 11:return function(n,e){return{type:"root",children:Z(n,e)}}(n,e);case 10:return{type:"doctype"};default:return}}(n,e);return l&&e.afterTransform&&e.afterTransform(n,l),l}function Z(n,e){const l=n.childNodes,t=[];let o=-1;for(;++o<l.length;){const n=J(l[o],e);void 0!==n&&t.push(n)}return t}const _=new DOMParser,$=function(n){if(null==n)return nn;if("function"==typeof n)return Q(n);if("object"==typeof n)return Array.isArray(n)?function(n){const e=[];let l=-1;for(;++l<n.length;)e[l]=$(n[l]);return Q(function(...n){let l=-1;for(;++l<e.length;)if(e[l].apply(this,n))return!0;return!1})}(n):function(n){const e=n;return Q(function(l){const t=l;let o;for(o in n)if(t[o]!==e[o])return!1;return!0})}(n);if("string"==typeof n)return e=n,Q(function(n){return n&&n.type===e});var e;throw new Error("Expected function, string, or object as test")};function Q(n){return function(e,l,t){return Boolean(function(n){return null!==n&&"object"==typeof n&&"type"in n}(e)&&n.call(this,e,"number"==typeof l?l:void 0,t||void 0))}}function nn(){return!0}const en=[],ln=!1;function tn(n,l){console.log("render",n,l);const{canvas:t,ctx:o}=function(n,l,t){const o=e(1280,960);if(!o)return console.error("Canvas element with id 'jsc' not found."),{canvas:null,ctx:null};o.width=1280,o.height=960;const r=o.getContext("2d");return r?(r.clearRect(0,0,o.width,o.height),{canvas:o,ctx:r}):(console.error("Unable to get canvas context."),{canvas:o,ctx:null})}();return null===t||null===o?null:(n.getNodes().forEach(n=>{!function(n,e,l){e.beginPath(),e.roundRect(l.x+n.width/2,l.y+n.height/2,l.width,l.height,[5]),e.stroke(),e.closePath(),l.label&&e.fillText(l.label,l.x+5+n.width/2,l.y+20+n.height/2),"text"===l.type&&l.text&&e.fillText(l.text,l.x+5+n.width/2,l.y+40+n.height/2)}(t,o,n)}),n.getEdges().forEach(e=>{const l=n.getNodes().find(n=>n.id===e.fromNode),r=n.getNodes().find(n=>n.id===e.toNode);void 0!==r&&void 0!==l&&function(n,e,l,t,o){if(t&&l){let r=t.x+t.width+n.width/2,a=t.y+t.height/2+n.height/2,i=l.x+n.width/2,u=l.y+l.height/2+n.height/2;"left"===o.fromSide?r=t.x+n.width/2:"top"===o.fromSide?a=t.y+n.height/2:"bottom"===o.fromSide&&(a=t.y+t.height+n.height/2),"right"===o.toSide?i=l.x+l.width+n.width/2:"top"===o.toSide?u=l.y+n.height/2:"bottom"===o.toSide&&(u=l.y+l.height+n.height/2),e.beginPath(),e.moveTo(r,a),e.lineTo(i,u),e.stroke(),e.closePath();const s=10,c=Math.atan2(u-a,i-r);e.beginPath(),e.moveTo(i,u),e.lineTo(i-s*Math.cos(c-Math.PI/6),u-s*Math.sin(c-Math.PI/6)),e.lineTo(i-s*Math.cos(c+Math.PI/6),u-s*Math.sin(c+Math.PI/6)),e.lineTo(i,u),e.lineTo(i-s*Math.cos(c-Math.PI/6),u-s*Math.sin(c-Math.PI/6)),e.stroke(),e.fill()}}(t,o,r,l,e)}),t.toDataURL())}var on=Object.defineProperty,rn=(n,e,l)=>(((n,e,l)=>{e in n?on(n,e,{enumerable:!0,configurable:!0,writable:!0,value:l}):n[e]=l})(n,"symbol"!=typeof e?e+"":e,l),l);class an{constructor(n,e){rn(this,"nodes",[]),rn(this,"edges",[]),n&&(this.nodes=n),e&&(this.edges=e)}addNode(n){if(this.nodes.find(e=>e.id===n.id))throw new Error("A node with the same ID already exists in this.nodes");this.nodes.push(n)}addEdge(n){if(this.edges.find(e=>e.id===n.id))throw new Error("An edge with the same ID already exists in this.edges");this.edges.push(n)}getNode(n){return this.nodes.find(e=>e.id===n)}getEdge(n){return this.edges.find(e=>e.id===n)}getNodes(){return this.nodes}getEdges(){return this.edges}removeNode(n){this.nodes=this.nodes.filter(e=>e.id!==n),this.edges=this.edges.filter(e=>e.fromNode!==n&&e.toNode!==n)}removeEdge(n){this.edges=this.edges.filter(e=>e.id!==n)}toString(){return JSON.stringify({nodes:this.nodes,edges:this.edges})}static fromString(n){const e=JSON.parse(n);return new an(e.nodes,e.edges)}}const un=()=>async n=>{const e=[];!function(n,l,t,o){let r,a,i;a="element",i=(n,l)=>{console.log(n,l),"img"===n.tagName&&void 0!==l&&(console.log("Adding",n),e.push(n))},r=void 0,function(n,e,l,t){let o;o="element";const r=$("element");!function n(e,t,o){const a=e&&"object"==typeof e?e:{};if("string"==typeof a.type){const n="string"==typeof a.tagName?a.tagName:"string"==typeof a.name?a.name:void 0;Object.defineProperty(i,"name",{value:"node ("+e.type+(n?"<"+n+">":"")+")"})}return i;function i(){let a,i,u,s=en;if(r(e,t,o[o.length-1]||void 0)&&(s=function(n){return Array.isArray(n)?n:"number"==typeof n?[!0,n]:null==n?en:[n]}(l(e,o)),s[0]===ln))return s;if("children"in e&&e.children){const l=e;if(l.children&&"skip"!==s[0])for(i=0,u=o.concat(l);i>-1&&i<l.children.length;){if(a=n(l.children[i],i,u)(),a[0]===ln)return a;i="number"==typeof a[1]?a[1]:i+1}}return s}}(n,void 0,[])()}(n,0,function(n,e){const l=e[e.length-1],t=l?l.children.indexOf(n):void 0;return i(n,t)})}(n);for(const n of e){const e=n.properties.src;console.log("Detected",e);let r=await sn(e);console.log("Got markdown",r);const a=an.fromString(r);let i;console.log(a.toString()),i=tn(a,{}),console.log(i);const u=(t=`<img alt='' src='${i}' />`,o={fragment:!0},J(o?.fragment?function(n){const e=document.createElement("template");return e.innerHTML=n,e.content}(t):_.parseFromString(t,"text/html"),{})||{type:"root",children:[]});n.properties=l({},n.properties),n.tagName="div",n.children=u.children}var t,o};async function sn(e){let l="Loading";return e.trim().toLowerCase().startsWith("https://")||"undefined"!=typeof window?await fetch(e).then(n=>n.text()).then(n=>l=n):l=n.readFileSync(e,{encoding:"utf8",flag:"r"}),null===l?"":l}export{un as default,un as rehypeJsonCanvas};
//# sourceMappingURL=index.js.map
